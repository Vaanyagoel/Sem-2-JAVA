class Account {
accounts
private static int accountCount = 0; // Static member to keep track of the number of
protected double balance; // Protected member to allow access in subclasses
public Account() {
accountCount++;
balance = 0.0;
}
public void deposit(double amount) {
if (amount > 0) {
balance += amount;
System.out.println("Deposited: $" + amount);
} else {
System.out.println("Deposit amount must be positive.");
} }
public void withdraw(double amount) {
if (amount > 0 && amount <= balance) {
balance -= amount;
System.out.println("Withdrew: $" + amount);
} else {
System.out.println("Insufficient balance or invalid amount.");
}
}
public double getBalance() {
return balance;
}
public static int getAccountCount() {
return accountCount;
}}
class SavingsAccount extends Account {
private double interestRate;
public SavingsAccount(double interestRate) {
super(); // Call the constructor of the superclass
this.interestRate = interestRate;
}
public void applyInterest() {
double interest = balance * interestRate / 100;
deposit(interest);
System.out.println("Interest applied: $" + interest);
}}
public class Bank {
public static void main(String[] args) {
SavingsAccount myAccount = new SavingsAccount(5.0); // 5% interest rate
myAccount.deposit(1000);
myAccount.withdraw(200);
myAccount.applyInterest();
System.out.println("Current Balance: $" + myAccount.getBalance());
System.out.println("Total Accounts Created: " + Account.getAccountCount());
}
}
